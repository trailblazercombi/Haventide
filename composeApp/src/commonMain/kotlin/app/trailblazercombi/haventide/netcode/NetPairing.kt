package app.trailblazercombi.haventide.netcode

import java.net.InetAddress
import java.net.NetworkInterface

object NetPairing {
    /**
     * Converts an IP address to a short and simple code that can be typed by the user.
     */
    fun inetToCode(ip: String): String {
        val args = ip.split(".")
        val result = if (args[0] == "192" && args[1] == "168") {
            if (args[2] == "1") args[3]
            else "${args[2]}.${args[3]}"
        } else ip
//        println("$ip -> $result")
        return result
    }

    /**
     * Reverses the code back into a valid IPv4 address.
     */
    fun codeToInet(code: String): String {
        var result = ""
        if (code.length < 4) result = "192.168.1.$code"
        else if (code.length < 7) result = "192.168.$code"
        else result = code
//        println("$code -> $result")
        return result
    }

    /**
     * Generated by ChatGPT.
     * Surprisingly, works.
     */
    fun localInet(): String {
        try {
            val interfaces = NetworkInterface.getNetworkInterfaces()
            while (interfaces.hasMoreElements()) {
                val networkInterface = interfaces.nextElement()

                // Ensure we skip non-physical interfaces (e.g., virtual ones like VPN or loopbacks)
                if (networkInterface.isUp && !networkInterface.isVirtual) {
                    val addresses = networkInterface.inetAddresses
                    while (addresses.hasMoreElements()) {
                        val inetAddress = addresses.nextElement()

                        // Filter out loopback addresses and select only IPv4 addresses
                        if (!inetAddress.isLoopbackAddress && inetAddress.hostAddress.indexOf(":") == -1) {
                            return inetAddress.hostAddress // Return the first valid non-loopback IPv4 address
                        }
                    }
                }
            }
        } catch (e: Exception) {
            e.printStackTrace()
        }
        return "IP Address not found"
    }
}
